#! /bin/bash
#
############################################################################
#
# MODULE:        g.align.xyz
# 
# AUTHOR:   	 Eric Patton 
# 
# PURPOSE:       To align the current region with the bounds of an input xyz file	 	
#
# COPYRIGHT:     (C) 2009-2019 by Eric Patton (epatton at nrcan dot gc dot ca)
#
#                This program is free software under the GNU General Public
#                License (>=v3). Read the file COPYING that comes with GRASS
#                for details.
#
# Last Modified: February 22, 2019
#
#############################################################################

#%Module
#% description: To align and set the current region to the raster bounds of an xyz ascii file. 
#%END

#%option
#% key: input
#% type: string
#% gisprompt: old_file,file,input
#% description: Name of xyz ascii file align region to.
#% required : yes 
#%END

#%option
#% key: sep
#% type:string
#% required: yes
#% answer: space
#% description: xyz field separator
#%END

#%option
#% key: resolution
#% type: integer
#% required: no 
#% description: Resolution to set region to
#% required: yes
#%END

if  [ -z "$GISBASE" ] ; then
    echo "You must be in GRASS GIS to run this program." 2>&1
    exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
     exec g.parser "$0" "$@"
fi

# Rename variables.
INPUT=$GIS_OPT_input
SEP=$GIS_OPT_sep
RES=$GIS_OPT_resolution

# Cleanup procedure.
cleanup()
{ if [ -f "$BOUNDS_FILE" ] ; then
	rm -f "$BOUNDS_FILE"
  fi
}

# Trap Ctrl-C and similar breaks from user
trap "cleanup ; exit 1" 2 3 15 

# Scan input xyz file for boundary extents and assign to variables.

echo "Scanning xyz file $INPUT for bounding extents...please standby."
echo ""

g.region `r.in.xyz -sg input="$INPUT" sep="$SEP" | awk '{print $1, $2, $3, $4}'` res=$RES -ap 

echo "Done."
cleanup

exit 0
