#! /bin/bash
#
############################################################################
#
# MODULE:        v.mksurvey for Grass 6.0/6.1
# 
# AUTHOR(S):   	 Eric Patton 
# 
# PURPOSE:       To create a survey grid from a pre-digitized vector baseline
#
# 
# COPYRIGHT:     (C) 2006-2020 by Eric Patton
#
#                This program is free software under the GNU General Public
#                License (>=v2). Read the file COPYING that comes with GRASS
#                for details.
# 
# Last Modified: February 7, 2020
#
#############################################################################

#%Module
#% description: Creates a survey grid based on an input vector baseline. 
#%END

#%option
#% key: input
#% type: string
#% gisprompt: old,vector,vector
#% description: Input vector baseline
#% required : yes 
#%END

#%option
#% key: output
#% type: string
#% gisprompt: old,vector,vector
#% description: Output survey grid name
#% required: no
#%END

#%option
#% key: lines
#% type: integer
#% description: Number of parallel survey grid lines to be in final grid (including original baseline)
#% required : yes
#%END

#%option
#% key: side
#% type: string
#% description: Whether to create lines on both sides of centerline, or just the left and right only
#% required: no
#% answer: right
#%END

#%option
#% key: distance
#% type: integer
#% description: Offset in map units, positive for right side, negative for left side
#% required: yes
#%END

SCRIPT=`basename $0`

if  [ -z "$GISBASE" ] ; then
    echo "You must be in GRASS GIS to run this program."
    exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
     exec g.parser "$0" "$@"
fi

# Cleanup procedure
cleanup()
{
	# Only invoke g.remove for cleanup if temp files have been created.
	MATCHES=`g.list type=vect pattern="temp_vect_*" | wc -l`
	if [ "$MATCHES" -gt 0 ] ; then
		g.remove -f type=vect pattern="temp_vect_*"
	fi 
}
	
# Exit procedure for user breaks.
exitprocedure()
{
 echo -e "User break! Exiting.\n"
 cleanup
 exit 1
}

# Trap Ctrl-C and similar breaks from user
trap "exitprocedure" 2 3 15 

	
INPUT=$GIS_OPT_input

if [ -z "$GIS_OPT_output" ] ; then
	
	OUTPUT=${INPUT}_survey
else
	OUTPUT=$GIS_OPT_output	

fi

LINES=$GIS_OPT_lines
DISTANCE=$GIS_OPT_distance

if [ -z "$GIS_OPT_side" ] ; then
	SIDE=right
else
	SIDE=$GIS_OPT_side
fi

## BEGIN CREATION OF VECTORS 


# Loop through v.parallel n times.
for ((COUNTER=1; COUNTER <= $LINES; COUNTER++ )) ; do
	
	v.parallel input=${INPUT} output=temp_vect_${COUNTER} distance=${DISTANCE} side=${SIDE} --o
	INPUT=temp_vect_${n}

done

# Merge individual survey lines into one vector.
v.patch input=`g.list sep="," type=vect pattern="temp_vect_*"` output=${OUTPUT} --o


#Cleanup

cleanup

exit 0
