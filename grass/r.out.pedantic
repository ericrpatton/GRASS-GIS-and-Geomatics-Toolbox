#! /bin/bash
#
# r.out.pedantic
#
# r.out.pedantic: Exports a GRASS raster to geotiff format such that the raw
# DEM/bathymetry values can be queried in Arc. Also, this script produces the
# kind of geotiff necessary for creating shaded-relief rasters in ArcGIS.  Uses
# the most pedantic and minimal set of geotiff writing options available in
# r.out.gdal.
# 
# The region is set by the command line, and not modified by the script.
#
# Creation date: August 29, 2018
#
##############################################################################

if  [ -z "$GISBASE" ] ; then
    echo "You must be in GRASS GIS to run this program."
    exit 1
fi

SCRIPT=$(basename $0)

if [ "$#" -ne 1 -o "$1" == "-H" -o "$1" == "-h" -o "$1" == "--help" -o "$1" == "-help" ] ; then
	echo -e "\nusage: $SCRIPT rastername \n"
	exit 1
fi

# Setup clean exit for Ctrl-C or similar breaks.
trap 'echo -e "\n\nUser break or similar caught; Exiting.\n" ; exit 1' 2 3 15

MAP=$1

[ -z "$MAP" ] &&  echo -e "\nError: $SCRIPT: No input rasters were given!" && exit 1

# Use the most pedantic (i.e., strict) set of geotiff-writing flags in
# r.out.gdal for petulant GIS like Global Mapper that throw errors at normal
# geotiffs:

# The flags are:
# -c   Do not write GDAL standard colortable
# -m   Do not write non-standard metadata
# -f   Force raster export despite any warnings of data loss

r.out.gdal input=${MAP} output=${MAP}.tif format=GTiff type=Float32 nodata=-99999 -c -m -f --v --o 


exit 0

