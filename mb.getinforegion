#! /bin/bash
#
############################################################################
#
# MODULE:        mb.getinforegion 
# 
# AUTHOR(S):   	 Eric Patton, Geological Survey of Canada (Atlantic)
# 		         <eric dot patton at canada dot ca>
#
# PURPOSE:      To extract the W/E/S/N bounds from the output of mbinfo. 
#		 
# COPYRIGHT:     (C) 2010-2021 by Eric Patton
#
#                This program is free software under the GNU General Public
#                License (>=v3). 
#
# NOTE:  mb.getinforegion will omit latitude and longitude values of 0
# through the mbinfo -G flag.
# 
# WARNING: Some swath sonar file have poor GPS nav, and will have meaningless
# positions close to but greater than 0. To keep mbinfo from reading these
# garbage files, the -R string is used as a filter to exclude positions outside
# of Canadian and American territorial waters.
#
#
# Last Modified: November 26, 2020
#
#############################################################################

SCRIPT=$(basename $0)

if [ "$1" == "-H" -o "$1" == "-h" -o "$1" == "--help" -o "$1" == "-help" ] ; then
	echo -e "\nusage: $SCRIPT [datalist_name]\n"
	exit 1
fi

# Note: Do NOT use the processed (*p.mb-1) datalist as input to this script. 
DATALIST=$1

# Use whatever datalist was provided on the command line, but if none was given
# default to the MB-System standard datalist. If we are using the standard
# "datalist.mb-1", use the default "mbinfo.txt" as well. Otherwise, use an
# mbinfo text file whose name contains the input datalist's from the command-line.
[[ -z ${DATALIST} ]] && DATALIST=datalist.mb-1 && MBINFO="mbinfo.txt" || MBINFO="$(basename $DATALIST .mb-1)_mbinfo.txt"

# Check if we have awk.
if [ ! -x "`which awk`" ] ; then
    echo "$SCRIPT: awk required, please install awk or gawk first" 2>&1
    exit 1
fi

# Setting environment, so that awk works properly in all languages.
unset LC_ALL
export LC_NUMERIC=C

# Setup clean exit for Ctrl-C or similar breaks.
trap 'echo -e "\n\nUser break or similar caught! Exiting.\n" 
exit 1' 2 3 15

if [ ! -f ${MBINFO} ] ; then
	
	# Only read in positions that are reasonable for North American geographic
	# bounds. 
	mbinfo -F-1 -I ${DATALIST} -G -R-180/-25/30/89.5 -V > ${MBINFO}
fi

MAX_WEST=`cat ${MBINFO} | grep "Minimum Longitude" | awk '{print $3}'`
MAX_EAST=`cat ${MBINFO} | grep "Maximum Longitude" | awk '{print $6}'`
MAX_SOUTH=`cat ${MBINFO} | grep "Minimum Latitude" | awk '{print $3}'`
MAX_NORTH=`cat ${MBINFO} | grep "Maximum Latitude" | awk '{print $6}'`

echo "${MAX_WEST}/${MAX_EAST}/${MAX_SOUTH}/${MAX_NORTH}"

exit 0
