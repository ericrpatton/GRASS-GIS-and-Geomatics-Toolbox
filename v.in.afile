#! /bin/bash
#
# This script takes a GSC-A navigation 'A File' as input. It formats the columns
# for input into the proj program by using awk to align the columns of data
# neatly.  After projecting to a the projection of the current GRASS project,
# the columns of data (latitude, longitude, and timestamp) are again
# re-formatted using awk for input.
# 
# Created by: Eric Patton, GSC-A
#
# Date Created: March 18, 2010
# 
# Last Modified: June 5, 2016
#				- Corrected all parameters to be Grass 7 compliant (June 5,	2016)
#
###################################################################################

if  [ -z $GISBASE ] ; then
 echo "You must be in GRASS GIS to run this program."
# into GRASS GIS using the helper script v.in.afile.
 exit 1
fi

SCRIPT=`basename $0`

# Check if we have awk and proj4.

if [ ! -x "`which awk`" ] ; then
	echo "$SCRIPT: awk required, please install awk or gawk first." 2>&1
	exit 1
fi

if [ ! -x "`which proj`" ] ; then
	echo "$SCRIPT: proj required, please install proj first." 2>&1
	exit 1
fi

# What to do in case of user break:
exitprocedure()
{
	echo -e "\n\nUser break or similar caught; Exiting.\n"
	exit 1
}

# Setup clean exit for Ctrl-C or similar breaks (signal list: trap -l):
trap "exitprocedure" 2 3 15

if [ "$#" -ne 1 -o "$1" == "-H" -o "$1" == "-h" -o "$1" == "--help" -o "$1" == "-help" ] ; then
	echo -e "\nusage: $SCRIPT afile \n"
	exit 1
fi


INPUT=$1
SUFFIX=".$(echo ${INPUT} | cut -d. -f2)"
BASENAME=$(basename ${INPUT} ${SUFFIX})
NUMBER_OF_POINTS=$(wc -l $INPUT | awk '{print $1}')
echo "Number_of_Points is $NUMBER_OF_POINTS"

# TO-DO: re-write the awk statement below to use printf instead of print, to
# enable the preservation of timestamps with padded zeros.
# Import Points
awk 'NF != 3 {next} ; {print $2, $3, $1}' ${INPUT} | proj -E -r `g.proj -jf` +datum=WGS84 | awk '{print $5, $3, $4, $1, $2}' | v.in.ascii -i input=- format=point output=${BASENAME}_points sep=space columns='Timestamp int, Easting double precision, Northing double precision, Latitude double precision, Longitude double precision' x=2 y=3 --o --v 

if [ "$?" -ne 0 ] ; then
	echo -e "\n$SCRIPT: Error encountered processing points! Exiting.\n"	
	exit 1
else
	echo -e "\nFinished importing points.\n"
fi

# Import Lines
awk  'NF != 3 {next} ; {print $2, $3, $1}' ${INPUT} | proj -r `g.proj -jf` +datum=WGS84 | awk -v num_points=$NUMBER_OF_POINTS 'BEGIN {print "L " num_points " 1"} {print $1, $2, $3} END {print "1 1"}' | v.in.ascii -n input=- format=standard output=${BASENAME}_lines sep=space columns='Easting double precision, Northing double precision, Timestamp int' x=1 y=2 --o --v 

if [ "$?" -ne 0 ] ; then
	echo -e "\n$SCRIPT: Error encountered processing lines! Exiting.\n"	
	exit 1
else
	echo -e "\nFinished importing lines.\n"
fi

exit 0
