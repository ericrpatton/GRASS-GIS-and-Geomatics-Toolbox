#! /bin/sh
#
############################################################################
#
# MODULE:        g.update
# 
# AUTHOR(S):   	 Eric Patton 
# 
# PURPOSE:       Updates local Grass cvs packages with the latest binary release 
#		 		 every Saturday when the releases are updated. Meant	
#		         to be run as a cron job in the background. Also replaces old profile	
# 		         pointers in .bashrc, .grass.bahrc, and .bash_aliases with new
#  		         pointers to the Grass install directory
#
# COPYRIGHT:     (C) 2006 by Eric Patton
#                This program is free software under the GNU General Public
#                License (>=v2). Read the file COPYING that comes with GRASS
#                for details.
#
# Last Modified: March 20, 2006 
#
#############################################################################

SCRIPT=`basename $0`

trap 'echo -e "\n\nUser break! Exiting.\n" ; exit 1' 2 3 15


BASE_PATH="http://grass.itc.it/grass61/binary/linux/snapshot/grass-6.1.cvs-i686-pc-linux-gnu-"
SHELL_SUFFIX="-install.sh"
TAR_SUFFIX=".tar.gz"

PACKAGE_PREFIX="grass-6.1.cvs-i686-pc-linux-gnu-"
SHELL_PACKAGE=${PACKAGE_PREFIX}${PACKAGE_DATE}${SHELL_SUFFIX}
TAR_PACKAGE=${PACKAGE_PREFIX}${PACKAGE_DATE}${SHELL_SUFFIX}

NEWDATE="`date +%d`_`date +%m`_`date +%Y`"

if  [ `date | cut -d' ' -f1` == "Sat" ] ; then

	if [ -f $HOME/Grass_package_update.log ] ; then
		rm -f $HOME/Grass_package_update.log
	fi

	DAY=`date +%d`
	MONTH=`date +%m`
	YEAR=`date +%Y`
	PACKAGE_DATE=${DAY}_${MONTH}_${YEAR}
	
	if [ ! -d $HOME/Imports ] ; then
		mkdir $HOME/Imports
		
		if [ $? -ne 0 ] ; then
			echo -e "\n$SCRIPT: Error: not able to create Imports directory \
				in $HOME. Exiting.\n"
			exit 1

		fi
	fi
		

	cd $HOME/Imports

	echo -e "\nChanging directory to $HOME and downloading tarfiles..." > Grass_package_update.log
	echo -e "\n\nThe new Grass tar packages are named ${BASE_PATH}${PACKAGE_DATE}${SHELL_SUFFIX}" >> Grass_package_update.log
	
	echo -e	"and ${BASE_PATH}${PACKAGE_DATE}${TAR_SUFFIX}.\n" >> Grass_package_update.log

	SHELL_PATH=${BASE_PATH}${PACKAGE_DATE}${SHELL_SUFFIX}
	TAR_PATH=${BASE_PATH}${PACKAGE_DATE}${TAR_SUFFIX}

	echo ""	
	wget ${SHELL_PATH} 
	wget ${TAR_PATH}
	
	if [ $? -ne 0 ] ; then
		echo -e "\n$SCRIPT: wget encountered an error downloading new packages. Exiting.\n" >> Grass_package_update.log
		exit 1
	fi

	cat $HOME/.bash_aliases | sed "s/[0-9]\{2\}_[0-9]\{2\}_[0-9]\{4\}/"$NEWDATE"/g" > $HOME/.bash_aliases_new
	cat $HOME/.grass.bashrc | sed "s/[0-9]\{2\}_[0-9]\{2\}_[0-9]\{4\}/"$NEWDATE"/g" > $HOME/.grass_bashrc_new
	cat $HOME/.bashrc | sed "s/[0-9]\{2\}_[0-9]\{2\}_[0-9]\{4\}/"$NEWDATE"/g" > $HOME/.bashrc_new
	
	mv $HOME/.bash_aliases_new $HOME/.bash_aliases
	mv $HOME/.grass_bashrc_new $HOME/.grass_bashrc
	mv $HOME/.bashrc_new $HOME/.bashrc

	if [ $? -eq 0 ] ; then
		echo -e "\nUpdated .bashrc, .grass_bashrc and .bash_aliases with new pointer variables.\n" >> Grass_package_update.log
		
		echo -e "\nListing of $HOME/Imports: \n" >> Grass_package_update.log
		ls -rtlh $HOME/Imports/ >> Grass_package_update.log
	
	else
		echo -e "\n$SCRIPT: Error updating profile files with new pointers. \
			Exiting.\n" >> Grass_package_update.log
		exit 1
	fi

fi

exit 0
